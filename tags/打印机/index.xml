<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>打印机 on Tars</title>
    <link>https://gargantuaX.github.io/tags/%E6%89%93%E5%8D%B0%E6%9C%BA/</link>
    <description>Recent content in 打印机 on Tars</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zn-Hans</language>
    <lastBuildDate>Fri, 27 Oct 2017 06:39:26 +0000</lastBuildDate>
    
	<atom:link href="https://gargantuaX.github.io/tags/%E6%89%93%E5%8D%B0%E6%9C%BA/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>web控制打印机的优秀工具-qz.io</title>
      <link>https://gargantuaX.github.io/blog/2017-10/web%E6%8E%A7%E5%88%B6%E6%89%93%E5%8D%B0%E6%9C%BA%E7%9A%84%E4%BC%98%E7%A7%80%E5%B7%A5%E5%85%B7-qz.io/</link>
      <pubDate>Fri, 27 Oct 2017 06:39:26 +0000</pubDate>
      
      <guid>https://gargantuaX.github.io/blog/2017-10/web%E6%8E%A7%E5%88%B6%E6%89%93%E5%8D%B0%E6%9C%BA%E7%9A%84%E4%BC%98%E7%A7%80%E5%B7%A5%E5%85%B7-qz.io/</guid>
      <description>引言 以往通过web控制打印机,一般是通过js控制Applet运行java去控制打印机,但如今主流浏览器因为安全问题,已经不允许在网页中运行java了.非要运行java只能装低版本的浏览器,这容易产生安全问题,不是一个好办法. qz.io 能很好的解决这个问题. qz.io qz.io的思路很巧妙,通过一个客户端程序去驱动打印机,同时在客户端建立一个websocket服务器,暴露出api给web调用.支持所有浏览器,所有操</description>
    </item>
    
  </channel>
</rss>
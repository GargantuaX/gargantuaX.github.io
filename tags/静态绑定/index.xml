<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>静态绑定 on Gargantua</title>
    <link>https://gargantuaX.github.io/tags/%E9%9D%99%E6%80%81%E7%BB%91%E5%AE%9A/</link>
    <description>Recent content in 静态绑定 on Gargantua</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zn-Hans</language>
    <lastBuildDate>Wed, 15 Feb 2017 03:53:36 +0000</lastBuildDate>
    
	<atom:link href="https://gargantuaX.github.io/tags/%E9%9D%99%E6%80%81%E7%BB%91%E5%AE%9A/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>理解PHP延迟静态绑定(late static bindings)</title>
      <link>https://gargantuaX.github.io/blog/2017-02/%E7%90%86%E8%A7%A3php%E5%BB%B6%E8%BF%9F%E9%9D%99%E6%80%81%E7%BB%91%E5%AE%9Alate-static-bindings/</link>
      <pubDate>Wed, 15 Feb 2017 03:53:36 +0000</pubDate>
      
      <guid>https://gargantuaX.github.io/blog/2017-02/%E7%90%86%E8%A7%A3php%E5%BB%B6%E8%BF%9F%E9%9D%99%E6%80%81%E7%BB%91%E5%AE%9Alate-static-bindings/</guid>
      <description>简单理解PHP延迟静态绑定 static::中的static其实是运行时所在类的别名，并不是定义类时所在的那个类名。这个东西可以实现在父类中能够调用子类的方法和属性。 使用(static)关键字来表示这个别名，和静态方法，静态类没有半毛钱的关系，static::不仅支持静态类，还支持对象（动态类）。 预备概念 转发调用 所谓的“转发调用”（forwarding call）指的是通过以下几种方式进行的静态调用：</description>
    </item>
    
  </channel>
</rss>